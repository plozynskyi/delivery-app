{"version":3,"file":"static/js/943.24226b95.chunk.js","mappings":"0IAEA,MAsBA,EAtBgBA,IAAiC,IAAhC,aAAEC,EAAY,SAAEC,GAAUF,EACzC,MAAOG,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAAKJ,IAElCK,GAAeC,EAAAA,EAAAA,cACnBC,IAAiB,IAAhB,OAAEC,GAAQD,EACT,MAAM,KAAEE,EAAI,MAAEC,GAAUF,EACxBL,GAASQ,IACA,IAAKA,EAAW,CAACF,GAAOC,KAC/B,GAEJ,CAACP,IASH,MAAO,CAAED,QAAOC,WAAUE,eAAcO,aANnBC,IACnBA,EAAEC,iBACFb,EAAS,IAAKC,IACdC,EAAS,IAAKH,GAAe,EAGuB,C,2FCrBxD,MAOA,EAPqB,CACnBS,KAAM,GACNM,MAAO,GACPC,SAAU,GACVC,gBAAiB,IC2BnB,EA/Be,CACbR,KAAM,CACJS,KAAM,OACNT,KAAM,OACNU,UAAU,EACVC,MAAO,aAGTL,MAAO,CACLG,KAAM,QACNT,KAAM,QACNU,UAAU,EACVC,MAAO,cAGTJ,SAAU,CACRE,KAAM,WACNT,KAAM,WACNU,UAAU,EACVC,MAAO,iBAGTH,gBAAiB,CACfC,KAAM,WACNT,KAAM,kBACNU,UAAU,EACVC,MAAO,kB,cCxBX,MAAMC,E,QAAkBC,GAAOC,IAAI;;;eCQnC,MA+CA,EA/CqBxB,IAAmB,IAAlB,SAAEE,GAAUF,EAChC,MAAM,MAAEG,EAAK,aAAEG,EAAY,aAAEO,IAAiBY,EAAAA,EAAAA,GAAQ,CACpDxB,aAAY,EACZC,cAEI,KAAEQ,EAAI,MAAEM,EAAK,SAAEC,EAAQ,gBAAEC,GAAoBf,EAEnD,OACEuB,EAAAA,EAAAA,MAACJ,EAAe,CAACpB,SAAUW,EAAac,SAAA,EACtCC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTC,GAAI,CAAEC,MAAO,SACbpB,MAAOD,EACPJ,aAAcA,KACV0B,EAAOtB,KACXuB,OAAO,WAETL,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTC,GAAI,CAAEC,MAAO,QAASG,UAAW,QACjCvB,MAAOK,EACPV,aAAcA,KACV0B,EAAOhB,MACXiB,OAAO,WAETL,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTC,GAAI,CAAEC,MAAO,QAASG,UAAW,QACjCvB,MAAOM,EACPX,aAAcA,KACV0B,EAAOf,SACXgB,OAAO,WAETL,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTC,GAAI,CAAEC,MAAO,QAASG,UAAW,QACjCvB,MAAOO,EACPZ,aAAcA,KACV0B,EAAOd,gBACXe,OAAO,WAETL,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CACLL,GAAI,CAAEC,MAAO,QAASG,UAAW,QACjCE,QAAQ,YACRjB,KAAK,SAAQQ,SACd,cAGe,ECpDtB,MAAMU,E,QAAcd,EAAOe,GAAG;;;;;ECmB9B,EAdqBC,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACEb,EAAAA,EAAAA,KAACS,EAAW,CAAAV,UACVC,EAAAA,EAAAA,KAACc,EAAY,CAACxC,SANGF,IAAgC,IAA/B,KAAEU,EAAI,MAAEM,EAAK,SAAEC,GAAUjB,EAC7CwC,GAASG,EAAAA,EAAAA,IAAO,CAAEjC,OAAMM,QAAOC,aAAY,KAM7B,C,6ECVlB,MAaA,EAbmBjB,IAAiC,IAAhC,aAAEM,KAAiBsC,GAAO5C,EAC5C,MAAM6C,GAAKC,EAAAA,EAAAA,UAAQ,KAAMC,EAAAA,EAAAA,OAAU,IAEnC,OACEnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAS,CACRC,QAASJ,EACTT,QAAQ,WACRc,SAAU5C,KACNsC,GACJ,C","sources":["hooks/useForm.js","shared/components/RegisterForm/initialState.js","shared/components/RegisterForm/fields.js","shared/components/RegisterForm/register-form.styled.jsx","shared/components/RegisterForm/RegisterForm.jsx","pages/Auth/Signup/register-page.styled.jsx","pages/Auth/Signup/RegisterPage.jsx","shared/components/TextField/InputField.jsx"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","const initialState = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nexport default initialState;\n","const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    required: true,\n    label: 'User name',\n    // placeholder: 'User name',\n  },\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'User email',\n    // placeholder: 'User email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'User password',\n    // placeholder: 'User password',\n  },\n  confirmPassword: {\n    type: 'password',\n    name: 'confirmPassword',\n    required: true,\n    label: 'User password',\n    // placeholder: 'User password',\n  },\n};\n\nexport default fields;\n","import styled from 'styled-components';\n\nconst RegisterFormBox = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport { RegisterFormBox };\n","import PropTypes from 'prop-types';\n\nimport useForm from 'hooks/useForm';\nimport InputField from '../TextField/InputField';\nimport initialState from './initialState';\nimport fields from './fields';\n\nimport { Button } from '@mui/material';\nimport { RegisterFormBox } from './register-form.styled';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { name, email, password, confirmPassword } = state;\n\n  return (\n    <RegisterFormBox onSubmit={handleSubmit}>\n      <InputField\n        sx={{ width: '350px' }}\n        value={name}\n        handleChange={handleChange}\n        {...fields.name}\n        margin=\"dense\"\n      />\n      <InputField\n        sx={{ width: '350px', marginTop: '15px' }}\n        value={email}\n        handleChange={handleChange}\n        {...fields.email}\n        margin=\"dense\"\n      />\n      <InputField\n        sx={{ width: '350px', marginTop: '15px' }}\n        value={password}\n        handleChange={handleChange}\n        {...fields.password}\n        margin=\"dense\"\n      />\n      <InputField\n        sx={{ width: '350px', marginTop: '15px' }}\n        value={confirmPassword}\n        handleChange={handleChange}\n        {...fields.confirmPassword}\n        margin=\"dense\"\n      />\n      <Button\n        sx={{ width: '350px', marginTop: '15px' }}\n        variant=\"contained\"\n        type=\"submit\"\n      >\n        Sign up\n      </Button>\n    </RegisterFormBox>\n  );\n};\nexport default RegisterForm;\n\nRegisterForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst RegisterBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 2px;\n`;\n\nexport { RegisterBox };\n","import { useDispatch } from 'react-redux';\n\nimport { signup } from '../../../redux/auth/auth-operations';\n\nimport RegisterForm from 'shared/components/RegisterForm/RegisterForm';\nimport { RegisterBox } from './register-page.styled';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSignup = ({ name, email, password }) => {\n    dispatch(signup({ name, email, password }));\n  };\n\n  return (\n    <RegisterBox>\n      <RegisterForm onSubmit={handleSignup} />\n    </RegisterBox>\n  );\n};\n\nexport default RegisterPage;\n","import PropTypes from 'prop-types';\n\nimport { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport { TextField } from '@mui/material';\n\nconst InputField = ({ handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <TextField\n      htmlFor={id}\n      variant=\"outlined\"\n      onChange={handleChange}\n      {...props}\n    />\n  );\n};\n\nexport default InputField;\n\nInputField.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n"],"names":["_ref","initialState","onSubmit","state","setState","useState","handleChange","useCallback","_ref2","target","name","value","prevState","handleSubmit","e","preventDefault","email","password","confirmPassword","type","required","label","RegisterFormBox","styled","form","useForm","_jsxs","children","_jsx","InputField","sx","width","fields","margin","marginTop","Button","variant","RegisterBox","div","RegisterPage","dispatch","useDispatch","RegisterForm","signup","props","id","useMemo","nanoid","TextField","htmlFor","onChange"],"sourceRoot":""}