{"version":3,"file":"static/js/960.8ba9942b.chunk.js","mappings":"+MAEaA,EAAgBC,EAAAA,GAAAA,IAAH,sIAGQ,qBAAGC,MAAkBC,YAAYC,MAAjC,IAGA,qBAAGF,MAAkBC,YAAYE,OAAjC,IAIrBC,EAAQL,EAAAA,GAAAA,GAAH,uhBA6BLM,EAAoBN,EAAAA,GAAAA,IAAH,4P,oBCnB9B,MAjBA,WACE,IAAMO,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACT,EAAD,YACE,SAACM,EAAD,UAAO,gCACP,SAACC,EAAD,WACE,SAACG,EAAA,EAAD,CACEC,KAAK,SACLC,KAAM,eACNC,aAAc,kBAAML,EAAS,IAAf,QAKvB,C,sEClBKM,E,QAAMb,GAAAA,OAAH,gvBAOM,qBAAGc,MAAqB,QAAU,OAAlC,IAEF,mBAAgC,EAAhC,EAAGb,MAAkBc,MAAM,GAAS,IAApC,IAEI,qBAAGd,MAAkBe,MAAMC,KAAKC,QAAhC,IACF,qBAAGjB,MAAkBkB,UAAU,EAA/B,IACJ,qBAAGlB,MAAkBmB,OAAOC,IAA5B,IAEW,gBAAGpB,EAAH,EAAGA,MAAH,SAAUqB,OACnBrB,EAAMmB,OAAOC,KAAO,aADX,IAEJ,qBAAGC,OAAuB,EAAI,KAA9B,IACA,qBAAGrB,MAAkBmB,OAAOC,IAA5B,IAMU,qBAAGpB,MAAkBsB,WAAWN,IAAhC,IACH,qBAAGhB,MAAkBsB,WAAWN,IAAhC,IACI,qBAAGhB,MAAkBsB,WAAWN,IAAhC,IAIhB,qBAAGhB,MAAkBmB,OAAOI,aAA5B,IACO,qBAAGvB,MAAkBmB,OAAOK,MAA5B,IACI,qBAAGxB,MAAkBmB,OAAOK,MAA5B,IAIX,qBAAGxB,MAAkBmB,OAAOI,aAA5B,IACO,qBAAGvB,MAAkBmB,OAAOK,MAA5B,IACI,qBAAGxB,MAAkBmB,OAAOK,MAA5B,IAIX,qBAAGxB,MAAkBmB,OAAOI,aAA5B,IACO,qBAAGvB,MAAkBmB,OAAOM,SAA5B,IACI,qBAAGzB,MAAkBmB,OAAOM,SAA5B,I,UC7BxB,EAde,SAAC,GAAoD,IAAlDhB,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,aAAqC,IAAvBe,SAAAA,OAAuB,SACjE,OACE,SAACd,EAAD,CAAKc,SAAUA,EAAUjB,KAAMA,EAAMkB,QAAShB,EAA9C,SACGD,GAGN,C,sBCTc,SAASkB,EAAuBC,EAASC,GAItD,OAHKA,IACHA,EAAMD,EAAQE,MAAM,IAEfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHK,MAAOH,OAAOC,OAAOH,MAG3B,C","sources":["pages/NotFoundPage/NotFoundPage.styled.jsx","pages/NotFoundPage/NotFoundPage.jsx","shared/components/Button/Button.styled.jsx","shared/components/Button/Button.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MainContainer = styled.div`\n  width: 100%;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-top: 80px;\n  display: block;\n  align-items: center;\n  justify-content: center;\n\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 33px;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    display: flex;\n    font-weight: 600;\n    font-size: 32px;\n    line-height: 42px;\n    text-align: inherit;\n  }\n\n  @media (min-width: 1280px) {\n    display: flex;\n    font-weight: 600;\n    font-size: 32px;\n    line-height: 42px;\n  }\n`;\n\nexport const BottomInfoWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 60px;\n\n  @media (min-width: 768px) {\n    margin-top: 68px;\n  }\n  @media (min-width: 1280px) {\n    margin-top: 18px;\n  }\n`;\n","import Button from '../../shared/components/Button/Button';\nimport React from 'react';\nimport { Title, BottomInfoWrapper, MainContainer } from './NotFoundPage.styled';\nimport { useNavigate } from 'react-router-dom';\n\nfunction NotFoundPage() {\n  const navigate = useNavigate();\n\n  return (\n    <MainContainer>\n      <Title>Ooops! This page not found</Title>\n      <BottomInfoWrapper>\n        <Button\n          type=\"button\"\n          text={'To main page'}\n          clickHandler={() => navigate('/')}\n        ></Button>\n      </BottomInfoWrapper>\n    </MainContainer>\n  );\n}\n\nexport default NotFoundPage;\n","import styled from 'styled-components';\n\nconst Btn = styled.button`\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-width: ${({ short }) => (short ? '129px' : '252px')};\n  max-height: 40px;\n  padding: ${({ theme }) => theme.space[2] * 2 + 'px'} 0;\n\n  font-family: ${({ theme }) => theme.fonts.main.semiBold};\n  font-size: ${({ theme }) => theme.fontSizes[2]};\n  color: ${({ theme }) => theme.colors.blue};\n\n  background-color: ${({ theme, filled }) =>\n    filled ? theme.colors.blue : 'transparent'};\n  border-width: ${({ filled }) => (filled ? 0 : '2px')};\n  border-color: ${({ theme }) => theme.colors.blue};\n  border-style: solid;\n  border-radius: 40px;\n\n  z-index: 2;\n\n  transition: color 300ms ${({ theme }) => theme.transition.main},\n    border-color 300ms ${({ theme }) => theme.transition.main},\n    background-color 300ms ${({ theme }) => theme.transition.main};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.whiteStandart};\n    border-color: ${({ theme }) => theme.colors.yellow};\n    background-color: ${({ theme }) => theme.colors.yellow};\n  }\n\n  &.active {\n    color: ${({ theme }) => theme.colors.whiteStandart};\n    border-color: ${({ theme }) => theme.colors.yellow};\n    background-color: ${({ theme }) => theme.colors.yellow};\n  }\n\n  :disabled {\n    color: ${({ theme }) => theme.colors.whiteStandart};\n    border-color: ${({ theme }) => theme.colors.lightBlue};\n    background-color: ${({ theme }) => theme.colors.lightBlue};\n  }\n`;\n\nexport { Btn };\n","import PropTypes from 'prop-types';\nimport { Btn } from './Button.styled';\n\nconst Button = ({ type, text, clickHandler, disabled = false }) => {\n  return (\n    <Btn disabled={disabled} type={type} onClick={clickHandler}>\n      {text}\n    </Btn>\n  );\n};\n\nButton.propTypes = {\n  type: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  clickHandler: PropTypes.func,\n};\n\nexport default Button;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["MainContainer","styled","theme","breakpoints","tablet","desktop","Title","BottomInfoWrapper","navigate","useNavigate","Button","type","text","clickHandler","Btn","short","space","fonts","main","semiBold","fontSizes","colors","blue","filled","transition","whiteStandart","yellow","lightBlue","disabled","onClick","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value"],"sourceRoot":""}